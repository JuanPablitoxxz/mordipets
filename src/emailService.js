const nodemailer = require('nodemailer');

// Configuraci√≥n del transporter de email
const createTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER || 'tu-email@gmail.com',
      pass: process.env.EMAIL_PASS || 'tu-app-password'
    }
  });
};

// Funci√≥n para enviar c√≥digo de verificaci√≥n
const sendVerificationCode = async (email, code) => {
  try {
    console.log(`üìß Intentando enviar c√≥digo de verificaci√≥n a: ${email}`);
    console.log('üîç Verificando variables de entorno...');
    console.log('EMAIL_USER:', process.env.EMAIL_USER ? '‚úÖ Configurada' : '‚ùå No configurada');
    console.log('EMAIL_PASS:', process.env.EMAIL_PASS ? '‚úÖ Configurada' : '‚ùå No configurada');
    
    // Verificar configuraci√≥n
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
      console.error('‚ùå Variables de entorno de email no configuradas');
      console.error('üìù Configura en Railway:');
      console.error('   EMAIL_USER = mordipetss@gmail.com');
      console.error('   EMAIL_PASS = tu-app-password-de-16-caracteres');
      console.error('   FRONTEND_URL = https://tu-app.vercel.app');
      return { 
        success: false, 
        error: 'Variables de entorno de email no configuradas. Verifica la configuraci√≥n en Railway.' 
      };
    }
    
    const transporter = createTransporter();
    
    // Verificar conexi√≥n antes de enviar
    console.log('üîå Verificando conexi√≥n con Gmail...');
    await transporter.verify();
    console.log('‚úÖ Conexi√≥n con Gmail verificada');
    
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: 'C√≥digo de Verificaci√≥n - Mordipets',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <img src="https://via.placeholder.com/150x50/4CAF50/FFFFFF?text=Mordipets" alt="Mordipets Logo" style="max-width: 150px;">
            <h1 style="color: #4CAF50; margin: 20px 0;">Recuperar Contrase√±a</h1>
          </div>
          
          <div style="background-color: #f9f9f9; padding: 30px; border-radius: 10px; margin-bottom: 20px;">
            <h2 style="color: #333; margin-bottom: 20px;">¬°Hola!</h2>
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              Has solicitado recuperar tu contrase√±a en Mordipets. Para continuar con el proceso, 
              utiliza el siguiente c√≥digo de verificaci√≥n:
            </p>
            
            <div style="text-align: center; margin: 30px 0;">
              <div style="background-color: #4CAF50; color: white; font-size: 32px; font-weight: bold; 
                          padding: 20px; border-radius: 10px; letter-spacing: 5px; display: inline-block;">
                ${code}
              </div>
            </div>
            
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              <strong>Importante:</strong>
            </p>
            <ul style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              <li>Este c√≥digo expira en 10 minutos</li>
              <li>No compartas este c√≥digo con nadie</li>
              <li>Si no solicitaste este cambio, ignora este email</li>
            </ul>
          </div>
          
          <div style="text-align: center; color: #999; font-size: 14px;">
            <p>Este email fue enviado autom√°ticamente por Mordipets</p>
            <p>¬© 2024 Mordipets - Galletas para Perros</p>
          </div>
        </div>
      `
    };

    console.log('üì§ Enviando email...');
    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Email enviado exitosamente:', result.messageId);
    console.log(`üìß Destinatario: ${email}`);
    console.log(`üÜî Message ID: ${result.messageId}`);
    
    return { success: true, messageId: result.messageId };
    
  } catch (error) {
    console.error('‚ùå Error enviando email:', error);
    console.error('üîç Detalles del error:', {
      message: error.message,
      code: error.code,
      response: error.response
    });
    
    // Mensajes de error m√°s espec√≠ficos
    let errorMessage = error.message;
    if (error.code === 'EAUTH') {
      errorMessage = 'Error de autenticaci√≥n. Verifica las credenciales de email.';
    } else if (error.code === 'ECONNECTION') {
      errorMessage = 'Error de conexi√≥n. Verifica la configuraci√≥n de red.';
    } else if (error.responseCode === 535) {
      errorMessage = 'Error de autenticaci√≥n. Verifica la App Password de Gmail.';
    }
    
    return { success: false, error: errorMessage };
  }
};

// Funci√≥n para enviar confirmaci√≥n de cambio de contrase√±a
const sendPasswordChangedConfirmation = async (email, userName) => {
  try {
    console.log(`üìß Intentando enviar confirmaci√≥n de cambio de contrase√±a a: ${email}`);
    
    // Verificar configuraci√≥n
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
      console.error('‚ùå Variables de entorno de email no configuradas');
      return { 
        success: false, 
        error: 'Variables de entorno de email no configuradas' 
      };
    }
    
    const transporter = createTransporter();
    
    // Verificar conexi√≥n antes de enviar
    console.log('üîå Verificando conexi√≥n con Gmail...');
    await transporter.verify();
    console.log('‚úÖ Conexi√≥n con Gmail verificada');
    
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: 'Contrase√±a Actualizada - Mordipets',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <img src="https://via.placeholder.com/150x50/4CAF50/FFFFFF?text=Mordipets" alt="Mordipets Logo" style="max-width: 150px;">
            <h1 style="color: #4CAF50; margin: 20px 0;">¬°Contrase√±a Actualizada!</h1>
          </div>
          
          <div style="background-color: #f9f9f9; padding: 30px; border-radius: 10px; margin-bottom: 20px;">
            <h2 style="color: #333; margin-bottom: 20px;">Hola ${userName},</h2>
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              Tu contrase√±a ha sido actualizada exitosamente. Ahora puedes iniciar sesi√≥n 
              en Mordipets con tu nueva contrase√±a.
            </p>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.FRONTEND_URL || 'http://localhost:3000'}" 
                 style="background-color: #4CAF50; color: white; padding: 15px 30px; 
                        text-decoration: none; border-radius: 5px; font-weight: bold; 
                        display: inline-block;">
                Ir a Mordipets
              </a>
            </div>
            
            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              <strong>Si no realizaste este cambio:</strong>
            </p>
            <ul style="color: #666; line-height: 1.6; margin-bottom: 20px;">
              <li>Contacta inmediatamente a nuestro soporte</li>
              <li>Cambia tu contrase√±a nuevamente</li>
              <li>Revisa la seguridad de tu cuenta</li>
            </ul>
          </div>
          
          <div style="text-align: center; color: #999; font-size: 14px;">
            <p>Este email fue enviado autom√°ticamente por Mordipets</p>
            <p>¬© 2024 Mordipets - Galletas para Perros</p>
          </div>
        </div>
      `
    };

    console.log('üì§ Enviando email de confirmaci√≥n...');
    const result = await transporter.sendMail(mailOptions);
    console.log('‚úÖ Email de confirmaci√≥n enviado:', result.messageId);
    console.log(`üìß Destinatario: ${email}`);
    console.log(`üÜî Message ID: ${result.messageId}`);
    
    return { success: true, messageId: result.messageId };
    
  } catch (error) {
    console.error('‚ùå Error enviando email de confirmaci√≥n:', error);
    console.error('üîç Detalles del error:', {
      message: error.message,
      code: error.code,
      response: error.response
    });
    
    // Mensajes de error m√°s espec√≠ficos
    let errorMessage = error.message;
    if (error.code === 'EAUTH') {
      errorMessage = 'Error de autenticaci√≥n. Verifica las credenciales de email.';
    } else if (error.code === 'ECONNECTION') {
      errorMessage = 'Error de conexi√≥n. Verifica la configuraci√≥n de red.';
    } else if (error.responseCode === 535) {
      errorMessage = 'Error de autenticaci√≥n. Verifica la App Password de Gmail.';
    }
    
    return { success: false, error: errorMessage };
  }
};

module.exports = {
  sendVerificationCode,
  sendPasswordChangedConfirmation
};
